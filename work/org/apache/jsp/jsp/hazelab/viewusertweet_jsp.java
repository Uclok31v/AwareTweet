/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.61
 * Generated at: 2015-11-12 16:23:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.hazelab;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import beans.User;
import beans.Tweet;
import java.util.ArrayList;
import javax.servlet.http.HttpSession;
import java.io.File;
import utility.UserListComponent;
import utility.SlideListComponent;

public final class viewusertweet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 User LoginUser = (User)session.getAttribute("user"); 
      out.write('\n');
      out.write('\n');
 UserListComponent listCompornent = new UserListComponent(); 
      out.write('\n');
 ArrayList<String> userList = listCompornent.getUserList(); 
      out.write('\n');
      out.write('\n');
 SlideListComponent slideCompornent = new SlideListComponent(); 
      out.write('\n');
 ArrayList<String> slideList = slideCompornent.getSlideList(); 
      out.write('\n');
      out.write('\n');
      out.write('\n');
 ArrayList tweetList = (ArrayList)request.getAttribute("tweetList"); 
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ja\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\n");
      out.write("<title>AwareTweet Top</title>\n");
      out.write("\n");
      out.write("<link href=\"../../css/vendor/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("<link href=\"../../css/flat-ui.css\" rel=\"stylesheet\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\n");
      out.write("<script\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.10.2.js\"></script>\n");
      out.write("<script src=\"../../js/vendor/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"http://code.jquery.com/ui/1.11.4/jquery-ui.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("   \t$(function() {\n");
      out.write("\n");
      out.write("   \t\tvar replyUsers = [];\n");
      out.write("   \t\t");
for(int i=0; i<userList.size();i++){
      out.write("\n");
      out.write("   \t\treplyUsers[");
      out.print(i);
      out.write("] = \"@\"+\"");
      out.print(userList.get(i));
      out.write(" \" ;\n");
      out.write("   \t\t");
}
      out.write("\n");
      out.write("\n");
      out.write("   \t\tvar slides = [];\n");
      out.write("   \t\t");
for(int i=0; i<slideList.size();i++){
      out.write("\n");
      out.write("   \t\tslides[");
      out.print(i);
      out.write("] = \"#\"+\"");
      out.print(slideList.get(i));
      out.write(" \" ;\n");
      out.write("   \t\t");
}
      out.write("\n");
      out.write("\n");
      out.write("   \t\tvar pages = [];\n");
      out.write("   \t\t");
for(int i=1; i<=60; i++){ 
      out.write("\n");
      out.write("   \t\tpages[");
      out.print(i-1);
      out.write("] = \"pp.\" + \"");
      out.print(i);
      out.write("\";\n");
      out.write("   \t\t");
}
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("   \t\tvar completeWords = replyUsers.concat(slides);\n");
      out.write("   \t\tcompleteWords = completeWords.concat(pages);\n");
      out.write("\n");
      out.write("   \t\tfunction split( val ) {\n");
      out.write("   \t      return val.split( / \\s*/ );\n");
      out.write("   \t    }\n");
      out.write("   \t    function extractLast( term ) {\n");
      out.write("   \t      return split( term ).pop();\n");
      out.write("   \t    }\n");
      out.write("\n");
      out.write("   \t $( \"#comment\" )\n");
      out.write("     // don't navigate away from the field on tab when selecting an item\n");
      out.write("     .bind( \"keydown\", function( event ) {\n");
      out.write("       if ( event.keyCode === $.ui.keyCode.TAB &&\n");
      out.write("           $( this ).data( \"autocomplete\" ).menu.active ) {\n");
      out.write("         event.preventDefault();\n");
      out.write("       }\n");
      out.write("     })\n");
      out.write("     .autocomplete({\n");
      out.write("       minLength: 0,\n");
      out.write("       source: function( request, response ) {\n");
      out.write("         // delegate back to autocomplete, but extract the last term\n");
      out.write("         response( $.ui.autocomplete.filter(\n");
      out.write("        \tcompleteWords, extractLast( request.term ) ) );\n");
      out.write("       },\n");
      out.write("       focus: function() {\n");
      out.write("         // prevent value inserted on focus\n");
      out.write("         return false;\n");
      out.write("       },\n");
      out.write("       select: function( event, ui ) {\n");
      out.write("         var terms = split( this.value );\n");
      out.write("         // remove the current input\n");
      out.write("         terms.pop();\n");
      out.write("         // add the selected item\n");
      out.write("         terms.push( ui.item.value );\n");
      out.write("         // add placeholder to get the comma-and-space at the end\n");
      out.write("         terms.push( \"\" )\n");
      out.write("         this.value = terms.join( \" \" );\n");
      out.write("         return false;\n");
      out.write("       }\n");
      out.write("     });\n");
      out.write("\n");
      out.write("\n");
      out.write("     });\n");
      out.write("     </script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body style=\"padding-top: 70px\">\n");
      out.write("\t<nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n");
      out.write("\t\t<div class=\"container\">\n");
      out.write("\t\t\t<div class=\"navbar-header\">\n");
      out.write("\t\t\t\t<a class=\"navbar-brand\">AwareTweet</a>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-left\">\n");
      out.write("\t\t\t\t<li><a href=\"../hazelab/MoveTopServlet\"><span\n");
      out.write("\t\t\t\t\t\tclass=\"fui-home\"> ホーム</span></a></li>\n");
      out.write("\t\t\t\t\t\t");
if(tweetList.size() > 0){ 
      out.write("\n");
      out.write("\t\t\t\t");
 Tweet tweet1 = (Tweet)tweetList.get(0); 
      out.write("\n");
      out.write("\t\t\t\t<li><a href=\"../hazelab/GetSlideServlet?id=");
      out.print(tweet1.getCommenter() );
      out.write("\"><span class=\"fui-play\"> スライド</span>\n");
      out.write("\t\t\t\t</a>");
} 
      out.write("\n");
      out.write("\t\t\t</ul>\n");
      out.write("\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t<li><a href=\"../hazelab/setting.jsp\"><span class=\"fui-user\">\n");
      out.write("\t\t\t\t\t\t\t設定</span></a></li>\n");
      out.write("\t\t\t\t<li><a href=\"../common/LogOutServlet\"><span\n");
      out.write("\t\t\t\t\t\tclass=\"fui-power\"> ログアウト</span></a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\n");
      out.write("\t\t\t<form class=\"navbar-form navbar-right\"\n");
      out.write("\t\t\t\taction=\"../hazelab/SearchTweetServlet\" method=\"post\" role=\"search\">\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<div class=\"input-group\">\n");
      out.write("\t\t\t\t\t\t<input class=\"form-control\" name=\"search_word\" id=\"search_word\"\n");
      out.write("\t\t\t\t\t\t\ttype=\"search\" placeholder=\"AwareTweet検索\"> <span\n");
      out.write("\t\t\t\t\t\t\tclass=\"input-group-btn\">\n");
      out.write("\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn\">\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"fui-search\"></span>\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t</span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</nav>\n");
      out.write("\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"col-md-3\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"well\">\n");
      out.write("\t\t\t\t<div id=\"avatar\" class=\"muted\">\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(LoginUser.getAvator_path() );
      out.write("\"\n");
      out.write("\t\t\t\t\t\tstyle=\"with: 120px; height: 120px;\" />\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<br>\n");
      out.write("\t\t\t\t<p>");
      out.print(LoginUser.getUser_name());
      out.write("</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<table class=\"table table-bordered table-hover table-condensed\">\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<th>メンバー</th>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t\t");
for(int i=0; i<userList.size(); i++){ 
      out.write("\n");
      out.write("\t\t\t\t\t");
String userName = (String)userList.get(i);
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td><a\n");
      out.write("\t\t\t\t\t\t\thref=\"../hazelab/GetUserTweetServlet?id=");
      out.print(userName );
      out.write('"');
      out.write('>');
      out.print(userName );
      out.write("</a></td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<div class=\"col-md-9\">\n");
      out.write("\t\t\t<div class=\"panel panel-primary\">\n");
      out.write("\t\t\t\t");
 for(int i=0; i<tweetList.size(); i++){ 
      out.write("\n");
      out.write("\t\t\t\t");
 Tweet tweet = (Tweet)tweetList.get(i); 
      out.write("\n");
      out.write("\t\t\t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t<img src=");
      out.print(tweet.getAvator_path() );
      out.write("\n");
      out.write("\t\t\t\t\t\tstyle=\"with: 30px; height: 30px;\" /> <a\n");
      out.write("\t\t\t\t\t\thref=\"../hazelab/GetUserTweetServlet?id=");
      out.print(tweet.getCommenter() );
      out.write('"');
      out.write('>');
      out.print(tweet.getCommenter());
      out.write("</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t<p>");
      out.print(tweet.getComment());
      out.write("</p>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"panel-footer\">");
      out.print(tweet.getDate());
      out.write("</div>\n");
      out.write("\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
